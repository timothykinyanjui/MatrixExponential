% Set up the data
clear

% Load the true parameters - generated by running ODE45 with strict
% tolerance RelTol = 1e-10
true = load('TrueValue','P');
pTrue = true.P; clear true

% Number of people in household
N = 10;

% Create the generator/configuration matrix
[Q,HHconfig] = SIOld(N); %#ok<*AGROW>

% Generate the data
for i = 1 : length(pTrue(:,1))
    %E(i,1) = (P(i,:)*HHconfig.dataI(:,2))/N;
    STrue(i,1) = (pTrue(i,:)*HHconfig.dataI(:,1))/N;
    ITrue(i,1) = (pTrue(i,:)*HHconfig.dataI(:,2))/N;
end

% Set up transmission parameter within the household
b = 0.01;
alpha = 0.663;
beta = b/((N-1)^alpha); %#ok<*PFOUS>

% Transmission between households
tau = 0.0047;
% tau = 0;

% Generate the initial conditions vector
P0 = zeros(length(HHconfig.dataI(:,1)),1); P0(length(HHconfig.dataI(:,1))-1,1) = 1;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% ODE45
% Runge-Kutta order 4,5 i.e. ode45
f = @(t,x)GenMatrixCalc(Q,beta,tau,HHconfig,x,N)*x;
tol = 1e-3;
h = 0.01;
timeC = 0:h:365;
tic;
[time, P] = ode45(f,timeC,P0,odeset('RelTol',tol,'NonNegative',1:length(P0)));
timeD(1) = toc;
% Generate the data
for i = 1 : length(P(:,1))
    S(i,1) = (P(i,:)*HHconfig.dataI(:,1))/N;
    I(i,1) = (P(i,:)*HHconfig.dataI(:,2))/N;
end

% Check the tolerance at the last time point
% tolerance(1) = abs(ITrue(end)-I(end));
tolerance(1) = sqrt(sum((pTrue(end,:)-P(end,:)).^2));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% DA order 1
% DA Method order 1
order  = 1; h = 0.01;
II = eye(length(HHconfig.dataI(:,1)),length(HHconfig.dataI(:,1)));
Mfull = GenMatrixCalc(Q,beta,tau,HHconfig,P0,N);
tic;
pDA_1 = daMethodTime(h,II,Mfull,365,order,P0,beta,tau,HHconfig,N,Q);
timeD(2) = toc;
% Generate the data
for i = 1 : length(pDA_1(:,1))
    %E(i,1) = (P(i,:)*HHconfig.dataI(:,2))/N;
    SDA(i,1) = (pDA_1(i,:)*HHconfig.dataI(:,1))/N;
    IDA(i,1) = (pDA_1(i,:)*HHconfig.dataI(:,2))/N;
end

% Check the tolerance at the last time point
% tolerance(2) = abs(ITrue(end)-IDA(end));
tolerance(2) = sqrt(sum((pTrue(end,:)-pDA_1(end,:)).^2));


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% TH order 3
% DA order 3 - Time inhomogeneous
order  = 3; h = 0.01;
II = eye(length(HHconfig.dataI(:,1)),length(HHconfig.dataI(:,1)));
Mfull = GenMatrixCalc(Q,beta,tau,HHconfig,P0,N);
tic;
pDA_1T = daMethodTimeH(h,II,365,P0,beta,tau,HHconfig,N,Q);
timeD(3) = toc;
% Generate the data
for i = 1 : length(pDA_1T(:,1))
    SDAT(i,1) = (pDA_1T(i,:)*HHconfig.dataI(:,1))/N;
    IDAT(i,1) = (pDA_1T(i,:)*HHconfig.dataI(:,2))/N;
end

% Check the tolerance at the last time point
% tolerance(3) = abs(ITrue(end)-IDAT(end));
tolerance(3) = sqrt(sum((pTrue(end,:)-pDA_1T(end,:)).^2));
